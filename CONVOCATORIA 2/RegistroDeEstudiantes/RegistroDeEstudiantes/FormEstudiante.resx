<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQcAAACjCAMAAACwjyvZAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAABgUExURQAefgARd/j5+6zB29Lf7MfV5wBGlQAuhwAog06Bto6tz4anzPT2+jpwqwBNmKm/2s3b
        6dDd6+7y9/T4+wArhdrk7wAngwAqhFWGuOTr9NXg7b7P5Ju21NPd6v///wAxiO/hDK8AAAAZdEVYdFNv
        ZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAC1klEQVR4Xu3d0XKaUBSF4YMRxTRGsBRN08j7v2Vx
        79UO5IbjURyG+b+7nhlF/1k3ONaEVVmtI5XHy38fpQ7npfyl19f5WcW+s6pchXUITaTsh67Q2WU6nJds
        s9ILvFzy6HcWugpdh1OU4lsHHc9KPejQRL+za4eibuNshx10Oi/hvdehLnQ65lRcO5z0r1F0MOxB6GDY
        g9DBsAehg2EPQgfDHoQOhj0IHQx7EDoY9iB0MOxB6GDYg9DBsAehg2EPQgfDHoQOhj0IHQx7EDoY9iB0
        MOxB6GCS91Df6bTVE40bdGiCnmCMf09s6j1sw71iv8k27PAZMj1+TJZ9Tb+HZnN4uU++j75Yv8PxEHvh
        w+Ft+j2Edz0k3Tmpw02m30PofbUz0S3Rp++QuoeldWAPQgfDHoQOhj0IHQx7EDoY9iD3d4i/9Xn50/uf
        d2kdprrPesAeyuhb4ZB4sV6H+PvucNN99wP2UNXRH41kr3pMJ61D3jR6sjGhecLnUYMO20anox7QYV6f
        Ty6uA3sQOhj2IHQw7EHoYNiD0MGwB6GDYQ9CB8MehA6GPQgdDHsQOhj2IHQw7EHoYNiD0MGwB6GDYQ9C
        B8MehA6GPQgdDHsQOhj2IHQw7EHoYNiD0MGwB6GDYQ9CB8MehA6GPQgdzGAP+yxas+Q9vO7PkXbnJe8h
        zfL2kIY9OPbg2INjD449OPbg2INjD449uIXsoffS0vxun9ihjI5++x7e7nLJp+9w/PcaL59T7aHe3K2N
        /onVtA5tqwtd6WTcjR3aRj+nkk5PFCGxQ/9HYHU07tYOz5S6hxR0cHRwdHB0cHRwdHB0cHRwdHB0cHRw
        dHB0cHRwdHB0cHRwdHB0cHRwdHB0cHRwdHB0cHRwdHB0cHRwdHB0cHRwdHB0cHRw1iGE0wx9+/tZOp1G
        YX/HPISimaH+l3d3WdDpNEJXYVVW6xn6yo+K0PnIdTqRqlz9BQzciBGfmJyMAAAAAElFTkSuQmCC
</value>
  </data>
</root>